#include <stdio.h>
#include <stdlib.h>
#include <string.h>

void swap(char **a, char**b){
  char *temp = *a;
  *a = *b;
  *b = temp;
}

int partition(char **arr, int left, int right){
  char *pivot = arr[right];
  int i = left - 1;

  for(int j = left; j<=right; j++ ){
    if(strcmp(arr[j], pivot) < 0){
      i++;
      swap(&arr[i], &arr[j]);
    }
  }
  swap(&arr[i + 1], &arr[right]);
  return i + 1;
}
void quickSort(char **arr, int left, int right) {
    if (left < right) {
        int pivotIndex = partition(arr, left, right);
        quickSort(arr, left, pivotIndex - 1);
        quickSort(arr, pivotIndex + 1, right);
    }
}

int main(){
  int N;
  int K;

  scanf("%d %d", &N, &K);
   
  if(N > 0 && K > 0 && N >= K) {
    char **names = malloc(N * sizeof(char *));
    int size = N;

    for(int i = 0; i < N; i++) {
      names[i] = malloc(N * sizeof(char));
      scanf("%s", names[i]);
    }
    
  quickSort(names, 0, size-1);
  
  printf("%s\n", names[K-1]);
  
  for(int i = 0; i < N; i++) {
      free(names[i]);
    }
    free(names);
   
  }else{
    
    return 1;
  }
  return 0;
}
