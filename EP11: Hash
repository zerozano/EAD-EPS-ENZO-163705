#include <stdio.h>
#include <stdlib.h>

typedef struct No {
    int chave;
    struct No* prox;
} No;

No* criarNo(int chave) {
    No* novoNo = (No*)malloc(sizeof(No));
    novoNo->chave = chave;
    novoNo->prox = NULL;
    return novoNo;
}

void inserir(No** tabela, int indice, int chave) {
    No* novoNo = criarNo(chave);
    if (tabela[indice] == NULL) {
        tabela[indice] = novoNo;
    } else {
        No* noAtual = tabela[indice];
        while (noAtual->prox != NULL) {
            noAtual = noAtual->prox;
        }
noAtual->prox = novoNo;
 }
}

void imprimirTabelaHash(No** tabela, int M) {
    for (int i = 0; i < M; i++) {
        printf("%d -> ", i);
        if (tabela[i] != NULL) {
            No* noAtual = tabela[i];
         while (noAtual != NULL) {
              printf("%d -> ", noAtual->chave);
             noAtual = noAtual->prox;   }
        }
        printf("\\\n");
    }
}

int main() {
    int N;
    scanf("%d", &N);

    for (int i = 0; i < N; i++) {
        int M, C;
        scanf("%d %d", &M, &C);
        
        No** tabela = (No**)malloc(M * sizeof(No*));
        for (int j = 0; j < M; j++) {
            tabela[j] = NULL; }

        for (int j = 0; j < C; j++) {
            int chave;
            scanf("%d", &chave);
            int indice = chave % M;
            inserir(tabela, indice, chave); }

        imprimirTabelaHash(tabela, M);

        free(tabela);
        if (i != N - 1) {
            printf("\n");
        }
    }

    return 0;
}
